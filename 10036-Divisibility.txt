#include <bits/stdc++.h>
#define clr(v, d)		memset(v, d, sizeof(v))
using namespace std;
int dx[4] = { 0, 0, 1, -1 };
int dy[4] = { 1, -1, 0, 0 };
int X[8]= {-1,-1,-1,0,0,1,1,1};
int Y[8]= {-1,0,1,-1,1,-1,0,1};
const int MAXX=10000+9;
typedef long long         ll;
const ll OO = 1e8;
const int o_o=0;
int dp[10007][100];
int item[10007];
int n , K ;
int solve(int pos , int mod)
{
    if(pos == n ){
        if(mod == 0 )return 1 ;
        return 0 ;
    }
    int &ret = dp[ pos ][ mod ];
    if( ret != -1 )return ret;
    ret = solve(pos+1, ( (mod + item[pos])% K + K ) % K   ) ;
    ret |= solve(pos +1 , ( (mod - item[pos] )% K + K ) % K   ) ;
    return ret ;
}
void inaz(){
for(int i=0;i<10007;i++){
        for(int j=0;j<100;j++){
            dp[i][j]=-1;

}}
}
int main()
{
    int test ;
    cin>>test;
  while(test--)
  {

     cin>>n>>K;
     for(int i=0;i<n;i++){cin>>item[i];}
     inaz();
     int ret = solve(1, (item[0]+K)%K );
     printf("%s\n",ret ? "Divisible" : "Not divisible" );
  }
   return 0;
}

